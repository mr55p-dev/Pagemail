package render

import (
	"fmt"
	"github.com/mr55p-dev/pagemail/db/queries"
)

const PAGE_SIZE = 10

templ PageList(pages []queries.Page, p int) {
	for _, v := range pages {
		@PageCard(&v)
	}
	if len(pages) >= PAGE_SIZE {
		<button
			hx-get={ fmt.Sprintf("/pages?p=%d", p+1) }
			hx-swap="outerHTML"
			hx-trigger="click, intersect once"
		>Load more</button>
	}
}

templ PageCard(page *queries.Page) {
	<article
		class="box"
		id={ fmt.Sprintf("page-%s", page.ID) }
		if page.PreviewState == "unknown" {
			hx-swap="innerHTML"
			hx-trigger="every 1s"
			hx-get={ fmt.Sprintf("/pages/%s", page.ID) }
			hx-target={ fmt.Sprintf("#page-%s", page.ID) }
			hx-select={ fmt.Sprintf("#page-%s>*", page.ID) }
			hx-target-error={ fmt.Sprintf("#page-%s", page.ID) }
		}
	>
		<header>
			if page.Title.Valid {
				<h3><a href={ templ.URL(page.Url) } target="_blank">{ page.Title.String }</a></h3>
				<sub-title>{ page.Url }</sub-title>
			} else {
				<h3><a href={ templ.URL(page.Url) } target="_blank">{ page.Url }</a></h3>
			}
		</header>
		if page.Description.Valid {
			<p>{ page.Description.String }</p>
		} else {
			if page.PreviewState == "unknown" {
				<p>Fetching preview</p>
			} else {
				<p>No description</p>
			}
		}
		<footer style="padding-top: 4px;">
			<button onClick={ OpenInNewTab(page.Url) }>Open</button>
			<button onClick={ CopyToClipboard(page.Url) }>Copy</button>
			<button
				hx-delete={ fmt.Sprintf("/pages/%s", page.ID) }
				hx-swap="outerHTML"
				hx-target={ fmt.Sprintf("#page-%s", page.ID) }
			>Delete</button>
			<small>Added { page.Created.Format("02-01-2006") }</small>
		</footer>
	</article>
}

script CopyToClipboard(text string) {
	navigator.clipboard.writeText(text).then(() => alert("Copied to clipboard!")).catch(() => alert("Something went wrong."))
}

script OpenInNewTab(url string) {
	window.open(url, "_blank")
}

package input

type Input struct {
	inputType   InputType
	autofill    bool
	name        string
	placeholder string
}

type InputType string

const (
	TypeNone        InputType = ""
	TypeCurrentPass InputType = "current-password"
	TypeNewPass     InputType = "new-password"
	TypeEmail       InputType = "email"
	TypeUsername    InputType = "username"
)

type With func(*Input)

func WithAutofill() With {
	return func(i *Input) {
		i.autofill = true
	}
}

func WithPlaceholder(text string) With {
	return func(i *Input) {
		i.placeholder = text
	}
}

func (i *Input) getType() string {
	switch i.inputType {
	case TypeCurrentPass, TypeNewPass:
		return "password"
	default:
		return string(i.inputType)
	}
}

func New(name string, inpType InputType, opts ...With) templ.Component {
	out := &Input{
		name:      name,
		inputType: inpType,
	}
	for _, fn := range opts {
		fn(out)
	}
	return out.done()
}

templ (i *Input) done() {
	<input
		placeholder={ i.placeholder }
		name={ i.name }
		type={ i.getType() }
		if i.autofill {
			autocomplete={ string(i.inputType) }
		} else {
			autocomplete="off"
		}
		class={ StyleDefault }
	/>
}

const StyleDefault = `
	w-full
	px-4 py-2
	rounded-lg
`

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package dbqueries

import (
	"context"
)

const getUser = `-- name: GetUser :one
SELECT id, username, email, password, name, avatar, subscribed, shortcut_token, has_readability, created, updated FROM users 
WHERE id = ? 
LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, id interface{}) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.Password,
		&i.Name,
		&i.Avatar,
		&i.Subscribed,
		&i.ShortcutToken,
		&i.HasReadability,
		&i.Created,
		&i.Updated,
	)
	return i, err
}

const getUserByShortcutToken = `-- name: GetUserByShortcutToken :one
SELECT id, username, email, password, name, avatar, subscribed, shortcut_token, has_readability, created, updated FROM users
WHERE shortcut_token = ?
LIMIT 1
`

func (q *Queries) GetUserByShortcutToken(ctx context.Context, shortcutToken interface{}) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserByShortcutToken, shortcutToken)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.Password,
		&i.Name,
		&i.Avatar,
		&i.Subscribed,
		&i.ShortcutToken,
		&i.HasReadability,
		&i.Created,
		&i.Updated,
	)
	return i, err
}

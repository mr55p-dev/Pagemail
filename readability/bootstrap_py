{"title": "<audio>: The Embed Audio element - HTML: HyperText Markup Language | MDN", "byline": null, "dir": null, "lang": "en-US", "content": "<div id=\"readability-page-1\" class=\"page\"><div><main id=\"content\"><article lang=\"en-US\"><header></header><p>The <strong><code>&lt;audio&gt;</code></strong> <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\">HTML</a> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the <code>src</code> attribute or the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source\"><code>&lt;source&gt;</code></a> element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a>.</p><section aria-labelledby=\"try_it\"><h2 id=\"try_it\"><a href=\"#try_it\">Try it</a></h2><div>\n<p>The above example shows simple usage of the <code>&lt;audio&gt;</code> element. In a similar manner to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element, we include a path to the media we want to embed inside the <code>src</code> attribute; we can include other attributes to specify information such as whether we want it to autoplay and loop, whether we want to show the browser's default audio controls, etc.</p>\n<p>The content inside the opening and closing <code>&lt;audio&gt;&lt;/audio&gt;</code> tags is shown as a fallback in browsers that don't support the element.</p></div></section><section aria-labelledby=\"attributes\"><h2 id=\"attributes\"><a href=\"#attributes\">Attributes</a></h2><div><p>This element's attributes include the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\">global attributes</a>.</p>\n<dl>\n  <dt id=\"autoplay\"><code>autoplay</code></dt>\n  <dd>\n    <p>A Boolean attribute: if specified, the audio will automatically begin playback as soon as it can do so, without waiting for the entire audio file to finish downloading.</p>\n    <p><strong>Note:</strong> Sites that automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, this can be useful when creating media elements whose source will be set at a later time, under user control. See our <a href=\"https://developer.mozilla.org/en-US/docs/Web/Media/Autoplay_guide\">autoplay guide</a> for additional information about how to properly use autoplay.</p>\n  </dd>\n  <dt id=\"controls\"><code>controls</code></dt>\n  <dd>\n    <p>If this attribute is present, the browser will offer controls to allow the user to control audio playback, including volume, seeking, and pause/resume playback.</p>\n  </dd>\n  <dt id=\"controlslist\"><code>controlslist</code> <abbr title=\"Experimental. Expect behavior to change in the future.\">\n    <span>Experimental</span>\n</abbr><abbr title=\"Non-standard. Check cross-browser support before using.\">\n    <span>Non-standard</span>\n</abbr></dt>\n  <dd>\n    <p>The <a href=\"https://wicg.github.io/controls-list/explainer.html\" target=\"_blank\"><code>controlslist</code></a> attribute, when specified, helps the browser select what controls to show for the <code>audio</code> element whenever the browser shows its own set of controls (that is, when the <code>controls</code> attribute is specified).</p>\n    <p>The allowed values are <code>nodownload</code>, <code>nofullscreen</code> and <code>noremoteplayback</code>.</p>\n  </dd>\n  <dt id=\"crossorigin\"><code>crossorigin</code></dt>\n  <dd>\n    <p>This <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Enumerated\">enumerated</a> attribute indicates whether to use CORS to fetch the related audio file. <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\">CORS-enabled resources</a> can be reused in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element without being <em>tainted</em>. The allowed values are:</p>\n    <dl>\n      <dt id=\"anonymous\"><code>anonymous</code></dt>\n      <dd>\n        <p>Sends a cross-origin request without a credential. In other words, it sends the <code>Origin:</code> HTTP header without a cookie, X.509 certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (by not setting the <code>Access-Control-Allow-Origin:</code> HTTP header), the resource will be <em>tainted</em>, and its usage restricted.</p>\n      </dd>\n      <dt id=\"use-credentials\"><code>use-credentials</code></dt>\n      <dd>\n        <p>Sends a cross-origin request with a credential. In other words, it sends the <code>Origin:</code> HTTP header with a cookie, a certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (through <code>Access-Control-Allow-Credentials:</code> HTTP header), the resource will be <em>tainted</em> and its usage restricted.</p>\n      </dd>\n    </dl>\n    <p>When not present, the resource is fetched without a CORS request (i.e. without sending the <code>Origin:</code> HTTP header), preventing its non-tainted use in <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> elements. If invalid, it is handled as if the enumerated keyword <strong>anonymous</strong> was used. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin\">CORS settings attributes</a> for additional information.</p>\n  </dd>\n  <dt id=\"disableremoteplayback\"><code>disableremoteplayback</code> <abbr title=\"Experimental. Expect behavior to change in the future.\">\n    <span>Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>A Boolean attribute used to disable the capability of remote playback in devices that are attached using wired (HDMI, DVI, etc.) and wireless technologies (Miracast, Chromecast, DLNA, AirPlay, etc.). See <a href=\"https://www.w3.org/TR/remote-playback/#the-disableremoteplayback-attribute\" target=\"_blank\">this proposed specification</a> for more information.</p>\n    \n  </dd>\n  <dt id=\"loop\"><code>loop</code></dt>\n  <dd>\n    <p>A Boolean attribute: if specified, the audio player will automatically seek back to the start upon reaching the end of the audio.</p>\n  </dd>\n  <dt id=\"muted\"><code>muted</code></dt>\n  <dd>\n    <p>A Boolean attribute that indicates whether the audio will be initially silenced. Its default value is <code>false</code>.</p>\n  </dd>\n  <dt id=\"preload\"><code>preload</code></dt>\n  <dd>\n    <p>This <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Enumerated\">enumerated</a> attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience. It may have one of the following values:</p>\n    <ul>\n      <li><code>none</code>: Indicates that the audio should not be preloaded.</li>\n      <li><code>metadata</code>: Indicates that only audio metadata (e.g. length) is fetched.</li>\n      <li><code>auto</code>: Indicates that the whole audio file can be downloaded, even if the user is not expected to use it.</li>\n      <li><em>empty string</em>: A synonym of the <code>auto</code> value.</li>\n    </ul>\n    <p>The default value is different for each browser. The spec advises it to be set to <code>metadata</code>.</p>\n    <div id=\"sect3\">\n      <p><strong>Note:</strong></p>\n      <ul>\n        <li>The <code>autoplay</code> attribute has precedence over <code>preload</code>. If <code>autoplay</code> is specified, the browser would obviously need to start downloading the audio for playback.</li>\n        <li>The browser is not forced by the specification to follow the value of this attribute; it is a mere hint.</li>\n      </ul>\n    </div>\n  </dd>\n  <dt id=\"src\"><code>src</code></dt>\n  <dd>\n    <p>The URL of the audio to embed. This is subject to <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">HTTP access controls</a>. This is optional; you may instead use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source\"><code>&lt;source&gt;</code></a> element within the audio block to specify the audio to embed.</p>\n  </dd>\n</dl></div></section><section aria-labelledby=\"events\"><h2 id=\"events\"><a href=\"#events\">Events</a></h2><div><figure><table>\n  <thead>\n    <tr>\n      <th scope=\"col\">Event name</th>\n      <th scope=\"col\">Fired when</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode/audioprocess_event\" title=\"audioprocess\"><code>audioprocess</code></a></td>\n      <td>\n        The input buffer of a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode\"><code>ScriptProcessorNode</code></a> is\n        ready to be processed.\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplay_event\" title=\"canplay\"><code>canplay</code></a></td>\n      <td>\n        The browser can play the media, but estimates that not enough data has\n        been loaded to play the media up to its end without having to stop for\n        further buffering of content.\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplaythrough_event\" title=\"canplaythrough\"><code>canplaythrough</code></a></td>\n      <td>\n        The browser estimates it can play the media up to its end without\n        stopping for content buffering.\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext/complete_event\" title=\"complete\"><code>complete</code></a></td>\n      <td>\n        The rendering of an <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a> is\n        terminated.\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/durationchange_event\" title=\"durationchange\"><code>durationchange</code></a></td>\n      <td>The <code>duration</code> attribute has been updated.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/emptied_event\" title=\"emptied\"><code>emptied</code></a></td>\n      <td>\n        The media has become empty; for example, this event is sent if the media\n        has already been loaded (or partially loaded), and the\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/load\"><code>HTMLMediaElement.load</code></a> method is called to\n        reload it.\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ended_event\" title=\"ended\"><code>ended</code></a></td>\n      <td>Playback has stopped because the end of the media was reached.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event\" title=\"loadeddata\"><code>loadeddata</code></a></td>\n      <td>The first frame of the media has finished loading.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadedmetadata_event\" title=\"loadedmetadata\"><code>loadedmetadata</code></a></td>\n      <td>The metadata has been loaded.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/pause_event\" title=\"pause\"><code>pause</code></a></td>\n      <td>Playback has been paused.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play_event\" title=\"play\"><code>play</code></a></td>\n      <td>Playback has begun.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playing_event\" title=\"playing\"><code>playing</code></a></td>\n      <td>\n        Playback is ready to start after having been paused or delayed due to\n        lack of data.\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ratechange_event\" title=\"ratechange\"><code>ratechange</code></a></td>\n      <td>The playback rate has changed.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeked_event\" title=\"seeked\"><code>seeked</code></a></td>\n      <td>A <em>seek</em> operation completed.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeking_event\" title=\"seeking\"><code>seeking</code></a></td>\n      <td>A <em>seek</em> operation began.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/stalled_event\" title=\"stalled\"><code>stalled</code></a></td>\n      <td>\n        The user agent is trying to fetch media data, but data is unexpectedly\n        not forthcoming.\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/suspend_event\" title=\"suspend\"><code>suspend</code></a></td>\n      <td>Media data loading has been suspended.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/timeupdate_event\" title=\"timeupdate\"><code>timeupdate</code></a></td>\n      <td>\n        The time indicated by the <code>currentTime</code> attribute has been\n        updated.\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/volumechange_event\" title=\"volumechange\"><code>volumechange</code></a></td>\n      <td>The volume has changed.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/waiting_event\" title=\"waiting\"><code>waiting</code></a></td>\n      <td>Playback has stopped because of a temporary lack of data</td>\n    </tr>\n  </tbody>\n</table></figure></div></section><section aria-labelledby=\"usage_notes\"><h2 id=\"usage_notes\"><a href=\"#usage_notes\">Usage notes</a></h2><div><p>Browsers don't all support the same <a href=\"https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Containers\">file types</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs\">audio codecs</a>; you can provide multiple sources inside nested <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source\"><code>&lt;source&gt;</code></a> elements, and the browser will then use the first one it understands:</p>\n<div><pre data-signature=\"0CcgF3IhkgyeJhNAWnl5iF8K48gDwM5JZRmmQqH3pyg=\"><code><span><span><span>&lt;</span>audio</span> <span>controls</span><span>&gt;</span></span>\n  <span><span><span>&lt;</span>source</span> <span>src</span><span><span>=</span><span>\"</span>myAudio.mp3<span>\"</span></span> <span>type</span><span></span></span></code></pre></div></div></section></article></main></div></div>", "textContent": "The <audio> HTML element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.Try it\nThe above example shows simple usage of the <audio> element. In a similar manner to the <img> element, we include a path to the media we want to embed inside the src attribute; we can include other attributes to specify information such as whether we want it to autoplay and loop, whether we want to show the browser's default audio controls, etc.\nThe content inside the opening and closing <audio></audio> tags is shown as a fallback in browsers that don't support the element.AttributesThis element's attributes include the global attributes.\n\n  autoplay\n  \n    A Boolean attribute: if specified, the audio will automatically begin playback as soon as it can do so, without waiting for the entire audio file to finish downloading.\n    Note: Sites that automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, this can be useful when creating media elements whose source will be set at a later time, under user control. See our autoplay guide for additional information about how to properly use autoplay.\n  \n  controls\n  \n    If this attribute is present, the browser will offer controls to allow the user to control audio playback, including volume, seeking, and pause/resume playback.\n  \n  controlslist \n    Experimental\n\n    Non-standard\n\n  \n    The controlslist attribute, when specified, helps the browser select what controls to show for the audio element whenever the browser shows its own set of controls (that is, when the controls attribute is specified).\n    The allowed values are nodownload, nofullscreen and noremoteplayback.\n  \n  crossorigin\n  \n    This enumerated attribute indicates whether to use CORS to fetch the related audio file. CORS-enabled resources can be reused in the <canvas> element without being tainted. The allowed values are:\n    \n      anonymous\n      \n        Sends a cross-origin request without a credential. In other words, it sends the Origin: HTTP header without a cookie, X.509 certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (by not setting the Access-Control-Allow-Origin: HTTP header), the resource will be tainted, and its usage restricted.\n      \n      use-credentials\n      \n        Sends a cross-origin request with a credential. In other words, it sends the Origin: HTTP header with a cookie, a certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (through Access-Control-Allow-Credentials: HTTP header), the resource will be tainted and its usage restricted.\n      \n    \n    When not present, the resource is fetched without a CORS request (i.e. without sending the Origin: HTTP header), preventing its non-tainted use in <canvas> elements. If invalid, it is handled as if the enumerated keyword anonymous was used. See CORS settings attributes for additional information.\n  \n  disableremoteplayback \n    Experimental\n\n  \n    A Boolean attribute used to disable the capability of remote playback in devices that are attached using wired (HDMI, DVI, etc.) and wireless technologies (Miracast, Chromecast, DLNA, AirPlay, etc.). See this proposed specification for more information.\n    \n  \n  loop\n  \n    A Boolean attribute: if specified, the audio player will automatically seek back to the start upon reaching the end of the audio.\n  \n  muted\n  \n    A Boolean attribute that indicates whether the audio will be initially silenced. Its default value is false.\n  \n  preload\n  \n    This enumerated attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience. It may have one of the following values:\n    \n      none: Indicates that the audio should not be preloaded.\n      metadata: Indicates that only audio metadata (e.g. length) is fetched.\n      auto: Indicates that the whole audio file can be downloaded, even if the user is not expected to use it.\n      empty string: A synonym of the auto value.\n    \n    The default value is different for each browser. The spec advises it to be set to metadata.\n    \n      Note:\n      \n        The autoplay attribute has precedence over preload. If autoplay is specified, the browser would obviously need to start downloading the audio for playback.\n        The browser is not forced by the specification to follow the value of this attribute; it is a mere hint.\n      \n    \n  \n  src\n  \n    The URL of the audio to embed. This is subject to HTTP access controls. This is optional; you may instead use the <source> element within the audio block to specify the audio to embed.\n  \nEvents\n  \n    \n      Event name\n      Fired when\n    \n  \n  \n    \n      audioprocess\n      \n        The input buffer of a ScriptProcessorNode is\n        ready to be processed.\n      \n    \n    \n      canplay\n      \n        The browser can play the media, but estimates that not enough data has\n        been loaded to play the media up to its end without having to stop for\n        further buffering of content.\n      \n    \n    \n      canplaythrough\n      \n        The browser estimates it can play the media up to its end without\n        stopping for content buffering.\n      \n    \n    \n      complete\n      \n        The rendering of an OfflineAudioContext is\n        terminated.\n      \n    \n    \n      durationchange\n      The duration attribute has been updated.\n    \n    \n      emptied\n      \n        The media has become empty; for example, this event is sent if the media\n        has already been loaded (or partially loaded), and the\n        HTMLMediaElement.load method is called to\n        reload it.\n      \n    \n    \n      ended\n      Playback has stopped because the end of the media was reached.\n    \n    \n      loadeddata\n      The first frame of the media has finished loading.\n    \n    \n      loadedmetadata\n      The metadata has been loaded.\n    \n    \n      pause\n      Playback has been paused.\n    \n    \n      play\n      Playback has begun.\n    \n    \n      playing\n      \n        Playback is ready to start after having been paused or delayed due to\n        lack of data.\n      \n    \n    \n      ratechange\n      The playback rate has changed.\n    \n    \n      seeked\n      A seek operation completed.\n    \n    \n      seeking\n      A seek operation began.\n    \n    \n      stalled\n      \n        The user agent is trying to fetch media data, but data is unexpectedly\n        not forthcoming.\n      \n    \n    \n      suspend\n      Media data loading has been suspended.\n    \n    \n      timeupdate\n      \n        The time indicated by the currentTime attribute has been\n        updated.\n      \n    \n    \n      volumechange\n      The volume has changed.\n    \n    \n      waiting\n      Playback has stopped because of a temporary lack of data\n    \n  \nUsage notesBrowsers don't all support the same file types and audio codecs; you can provide multiple sources inside nested <source> elements, and the browser will then use the first one it understands:\n<audio controls>\n  <source src=\"myAudio.mp3\" type", "length": 7469, "excerpt": "The <audio> HTML element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.", "siteName": null}